---
  - name: Init Swarm Master
    hosts: masters
    gather_facts: False
    remote_user: ubuntu
    become: true
    tasks:
      - name: install python 2
        raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
        
      - name: determine swarm status
        shell: >
            docker info | egrep '^Swarm: ' | cut -d ' ' -f2
        register: swarm_status
      
      - name: Swarm Init
        command: docker swarm init --advertise-addr {{ inventory_hostname }}

      - name: Get Worker Token
        command: docker swarm join-token worker -q
        register: worker_token

      - name: Show Worker Token
        debug: var=worker_token.stdout

      - name: Master Token
        command: docker swarm join-token manager -q
        register: master_token

      - name: Show Master Token
        debug: var=master_token.stdout

  - name: Join Swarm Cluster
    hosts: workers
    remote_user: ubuntu
    gather_facts: False
    become: true
    vars:
      token: "{{ hostvars[groups['masters'][0]]['worker_token']['stdout'] }}"
      master: "{{ hostvars[groups['masters'][0]]['inventory_hostname'] }}"
    tasks:
      - name: install python 2
        raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
        
      - name: determine swarm status
        shell: >
            docker info | egrep '^Swarm: ' | cut -d ' ' -f2
        register: swarm_status
      
      - name: Join Swarm Cluster as a Worker
        command: docker swarm join --token {{ token }} {{ master }}:2377
        register: worker
        

      - name: Show Results
        debug: var=worker.stdout
        

      - name: Show Errors
        debug: var=worker.stderr

    
  - name: copy app compose file on masters
    hosts: masters
    remote_user: ubuntu
    gather_facts: False
    vars:
      user: "ubuntu"
    become: true
    tasks:
      - name: copy file
        copy:
          src: "{{playbook_dir}}/app.yml"
          dest: "/home/{{user}}/docker-compose.yml"
          mode: 0755
      
      - name: copy password
        copy:
          src: "{{playbook_dir}}/my_password.txt"
          dest: "/root/my_password.txt"
          mode: 0755
          
      - name: Launch stack
        shell: >
          cd /home/{{user}}; cat /root/my_password.txt | docker login lab4.southeastasia.cloudapp.azure.com --username PBuser --password-stdin; docker stack deploy --compose-file docker-compose.yml shoppingcart
        register: swam-stack

      - name: Show Results
        debug: var=swam-stack.stdout
